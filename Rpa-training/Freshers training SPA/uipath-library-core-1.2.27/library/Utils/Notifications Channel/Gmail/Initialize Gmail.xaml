<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Gmail" this:Initialize_Gmail.__Prefix="[IO.Directory.GetCurrentDirectory]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="The name of the mail to be initialized." Name="MailName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Username of the Gmail Account used." Name="GmailID" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="The password of the gmail account used." Name="Password" Type="InArgument(ss:SecureString)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="The To address which is stored " Name="ToAddress" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="The CCaddress which is stored " Name="CCAddress" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="The BCCaddress which is stored " Name="BCCAddress" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Used to get the current directory." Name="__Prefix" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1794,827</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialize_GMail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="27">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>EmailValidation</x:String>
      <x:String>EasyEncryption</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>EmailValidation</AssemblyReference>
      <AssemblyReference>EasyEncryption</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="This Sequence is used to initialize the gmail.&#xD;&#xA;Arguments:&#xD;&#xA;1. MailName(In) - String - The name of the mail to be initialized.&#xD;&#xA;2. GmailID(In) - String - Username of the Gmail Account used.&#xD;&#xA;3. Password(In) - SecuredString - The password of the gmail account used.&#xD;&#xA;4. ToAddress(In) - String[] - The To address which is stored &#xD;&#xA;5. CCAddress(In) - String[] - The CCaddress which is stored &#xD;&#xA;6. BCCAddress(In) - String[] -  The BCCaddress which is stored &#xD;&#xA;7. __Prefix(In) - String - Used to get the current directory." DisplayName="Initialize_Gmail" sap:VirtualizedContainerService.HintSize="200,423" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="MailNameKey" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Lazy init library" sap:VirtualizedContainerService.HintSize="604,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="..\library\Lazy Init Library.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[__Prefix]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="NameSpacePrefix" />
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <Sequence DisplayName="Validate Input Arguments" sap:VirtualizedContainerService.HintSize="604,1837" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If sap2010:Annotation.AnnotationText="Checks if the mailName , UserID and the Password passed is empty.&#xD;&#xA;Then, if it is empty &quot;INVALID_INPUT_PARAMS - E0003&quot; error is thrown" Condition="[(&#xA;(String.IsNullOrEmpty(MailName) Or String.IsNullOrWhiteSpace(MailName)) Or&#xA;(String.IsNullOrEmpty(GmailID) Or String.IsNullOrWhiteSpace(GmailID)) Or&#xA;(Password.Length = 0)&#xA;)]" DisplayName="Check for Emptiness" sap:VirtualizedContainerService.HintSize="562,310" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Throw Business Exception workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Utils\Exception\Throw Business Exception.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="MessageCode">INVALID_INPUT_PARAMS</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ExtraMessage">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </If.Then>
      </If>
      <Sequence DisplayName="Validate EMail IDs" sap:VirtualizedContainerService.HintSize="562,1395" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:List(x:String)" Name="InvalidMailIDs" />
          <Variable x:TypeArguments="s:String[]" Name="InputEmailIDs" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:MultipleAssign sap2010:Annotation.AnnotationText="Appends the Email ID's passed to a list of string." DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="520,284" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[InputEmailIDs]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[{}]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[InvalidMailIDs]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[InputEmailIDs]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[IF(ToAddress Is Nothing, InputEmailIDs, InputEmailIDs.Concat(ToAddress)).ToArray()]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[InputEmailIDs]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[IF(CCAddress Is Nothing, InputEmailIDs, InputEmailIDs.Concat(CCAddress)).ToArray()]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[InputEmailIDs]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[IF(BCCAddress Is Nothing, InputEmailIDs, InputEmailIDs.Concat(BCCAddress)).ToArray()]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:String[]">[InputEmailIDs]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:String[]">[InputEmailIDs.Append(GmailID).ToArray]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Loop Input Emails" sap:VirtualizedContainerService.HintSize="520,410" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[InputEmailIDs]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="address" />
              </ActivityAction.Argument>
              <If sap2010:Annotation.AnnotationText="Validates the Email ID&#xD;&#xA;Then, if it is valid the email ID is logged&#xD;&#xA;Else, if it is invalid, it is added to a list of invalid emails." Condition="[EmailValidation.EmailValidator.Validate(address)]" sap:VirtualizedContainerService.HintSize="484,276" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[address]" />
                </If.Then>
                <If.Else>
                  <AddToCollection x:TypeArguments="x:String" Collection="[InvalidMailIDs]" DisplayName="Add To Invalid Emails" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[address]" />
                </If.Else>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <If sap2010:Annotation.AnnotationText="Checks if the list of invalid mails is greater than 0.&#xD;&#xA;Then, if greater than 0 then &quot;INVALID_EMAIL_ADDRESS - E0018&quot; error is thrown." Condition="[InvalidMailIDs.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="520,529" sap2010:WorkflowViewState.IdRef="If_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,310" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Invalid Email Addresses : &quot;+ String.Join(&quot; ; &quot;, InvalidMailIDs)]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Throw Business Exception workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Utils\Exception\Throw Business Exception.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="MessageCode">INVALID_EMAIL_ADDRESS</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ExtraMessage">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Verify MailName for Uniqueness" sap:VirtualizedContainerService.HintSize="604,1232" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Returns the mail name key for the mail name passed." DisplayName="Get the Mail Key" sap:VirtualizedContainerService.HintSize="526,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Utils/Notifications Channel/Gmail/Get Mail Name Key.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="MailName">[MailName]</InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="MailNameKey">[MailNameKey]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <Sequence sap2010:Annotation.AnnotationText="Check whether the MailName used to initialize the Gmail is already used in a workflow" DisplayName="Check for MailName uniqueness" sap:VirtualizedContainerService.HintSize="526,982" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:GenericValue" Name="MailParams" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="484,532" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Returns the mail Parameters." DisplayName="Invoke Get Generic Value workflow" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Utils\Store\Get Generic Value.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Key">[MailNameKey]</InArgument>
                <OutArgument x:TypeArguments="ui:GenericValue" x:Key="Value">[MailParams]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="ErrorOnKeyMiss">True</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,104" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <If sap2010:Annotation.AnnotationText="Checks if the mail parameters is nothing.&#xD;&#xA;Else, if it is not nothing &quot;DUPLICATE_MAILNAME - E0019&quot; error is thrown." Condition="[MailParams Is Nothing]" sap:VirtualizedContainerService.HintSize="484,287" sap2010:WorkflowViewState.IdRef="If_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Else>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Throw Business Exception workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Utils\Exception\Throw Business Exception.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="MessageCode">DUPLICATE_MAILNAME</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ExtraMessage">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Else>
        </If>
      </Sequence>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Constructs the Jobject and stores the details required for mail actions." DisplayName="Store the Arguments" sap:VirtualizedContainerService.HintSize="604,514" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="njl:JObject" Name="JsonObj" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Construct Gmail Config Object" sap:VirtualizedContainerService.HintSize="338,253" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JObject">[JsonObj]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JObject">[New Newtonsoft.Json.Linq.JObject]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JToken">[JsonObj("username")]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JToken">[GmailID]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JToken">[JsonObj("password")]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JToken">[New System.Net.NetworkCredential("", Password).Password]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JToken">[JsonObj("To")]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JToken">[IF(ToAddress is Nothing, "", String.Join(";", ToAddress))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JToken">[JsonObj("CC")]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JToken">[IF(CCAddress is Nothing, "", String.Join(";", CCAddress))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JToken">[JsonObj("BCC")]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JToken">[IF(BCCAddress is Nothing, "", String.Join(";", BCCAddress))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Set Generic Value workflow" sap:VirtualizedContainerService.HintSize="338,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Utils\Store\Set Generic Value.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="Key">[MailNameKey]</InArgument>
          <InArgument x:TypeArguments="ui:GenericValue" x:Key="Value">[JsonObj.ToString(Newtonsoft.Json.Formatting.None)]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
  </Sequence>
</Activity>