<Activity mc:Ignorable="sap sap2010" x:Class="GetTaskRunID" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Task run ID." Name="TaskRunID" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Expiry time." Name="ExpiryTime" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Modue Input in json format.&#xA;Note: &#xA;1. ExpiryTimeDifference should be in minutes. &#xA;2. Refer below json svhema for reference,&#xA;{&#xA; 'ProcessName':'process name', &#xA; 'TaskName':'task name', &#xA; 'E5HookCredentialAsset':'asset', &#xA; 'E5HookURL':'Hook url', &#xA; 'IsScratchpadUpdate':'true/false', &#xA; 'ProcessReference':'process refference', &#xA; 'ExpiryTimeDifference':'2',&#xA; 'NumberOfRetries':'60',&#xA; 'NotifyTaskRunCompletion': true/false&#xA;}" Name="ModuleJson" Type="InArgument(njl:JObject)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="DeepLink" Name="DeepLink" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="SummaryFields" Name="SummaryFieldNames" Type="OutArgument(scg:List(x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="Give true/false to create new task run." Name="IsCreateNewTask" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Whether the notification sent or not. If it is false, then send the notification manually" Name="IsNotificationSent" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>5090.4,9636</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetTaskRunID_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="45">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Element5_Core.Utils.Scratch_Pad</x:String>
      <x:String>RestSharp</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Element5_Core.Utils.Hooks.Execution_Hooks</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Element5_Core.Utils.Hooks.Execution_Hooks.Optimization</x:String>
      <x:String>Element5_Core.Utils.Store</x:String>
      <x:String>Element5_Core.Utils.Exception</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Activities.System.Properties</x:String>
      <x:String>GetterSetterActivity.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="39">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>Element5.Core_Expressions_25215798</AssemblyReference>
      <AssemblyReference>Element5.Core_Expressions_3579853</AssemblyReference>
      <AssemblyReference>Element5.Core</AssemblyReference>
      <AssemblyReference>Element5.Core_Expressions_48225753</AssemblyReference>
      <AssemblyReference>Element5.Core_Expressions_49371902</AssemblyReference>
      <AssemblyReference>RestSharp</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>GetterSetterActivity</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetTaskRunID" sap:VirtualizedContainerService.HintSize="5100.8,9571.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="njl:JObject" Name="FindResult" />
      <Variable x:TypeArguments="njl:JObject" Name="FilterJObj" />
      <Variable x:TypeArguments="x:String" Name="CurrentTime" />
      <Variable x:TypeArguments="x:String" Name="HookUserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="HookPassword" />
      <Variable x:TypeArguments="x:String" Name="ProcessIdentifier" />
      <Variable x:TypeArguments="x:Boolean" Name="LoginStatus" />
      <Variable x:TypeArguments="x:String" Name="ClientName" />
      <Variable x:TypeArguments="njl:JObject" Name="FlowConfig" />
      <Variable x:TypeArguments="x:String" Name="ScratchpadRecordID" />
      <Variable x:TypeArguments="njl:JObject" Name="InsertJObj" />
      <Variable x:TypeArguments="x:String" Name="ScratchpadExpiryTime" />
      <Variable x:TypeArguments="x:String" Default="MM-dd-yyyy HH:mm:ss" Name="DateFormatSchema" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Process name" Name="ProcessName" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Task name" Name="TaskName" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="E5 Hook credential asset." Name="E5HookCredentialAsset" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="E5 Hook URL" Name="E5HookURL" />
      <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Whether need to update the new Task run ID in scratchpad." Name="IsScratchpadUpdate" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="ProcessRefference in scratchpad." Name="ProcessReference" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Expiry time diiference(in hours)." Name="ExpiryTimeDifference" />
      <Variable x:TypeArguments="x:Int32" Name="NoOfRetries" />
      <Variable x:TypeArguments="njl:JObject" Name="UpdateJObj" />
      <Variable x:TypeArguments="x:String" Name="EmailSubject" />
      <Variable x:TypeArguments="x:String" Name="EmailBody" />
      <Variable x:TypeArguments="x:Boolean" Name="NotifyTaskRunCompletion" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="5059.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Get task run ID process started.&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="5059.2,9254.4" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="5022.4,9000" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Input going to validate and initialize,&#xA;1. ProcessName&#xA;2. TaskName&#xA;3. E5HookCredentialAsset&#xA;4. E5HookUR&#xA;5. IsScratchpadUpdate(should be true/false)&#xA;6. ProcessRefference&#xA;7. ExpiryTimeDifference(should be integer)&#xA;8. NumberOfRetries(should be integer)&#xA;9. NotifyTaskRunCompletion(Optional and Should be a boolean string)&#xA;&#xA;Added new feature to send task run completion notification when the task run is completed. NotifyTaskRunCompletion is the key to find whether we need to send notification or not" DisplayName="Validate &amp; Initialoze input parametres" sap:VirtualizedContainerService.HintSize="4980.8,1716" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[ModuleJson.ContainsKey(&quot;ProcessName&quot;) and ModuleJson.ContainsKey(&quot;TaskName&quot;) and ModuleJson.ContainsKey(&quot;E5HookCredentialAsset&quot;) and ModuleJson.ContainsKey(&quot;E5HookURL&quot;) and ModuleJson.ContainsKey(&quot;IsScratchpadUpdate&quot;) and ModuleJson.ContainsKey(&quot;ProcessReference&quot;) and ModuleJson.ContainsKey(&quot;ExpiryTimeDifference&quot;) and ModuleJson.ContainsKey(&quot;NumberOfRetries&quot;)]" DisplayName="If-Check parameter key" sap:VirtualizedContainerService.HintSize="681.6,247.2" sap2010:WorkflowViewState.IdRef="If_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Else>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Throw Business Exception workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Utils\Exception\Throw Business Exception.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="MessageCode">INVALID_INPUT_PARAMS</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraMessage">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Else>
            </If>
            <If Condition="[Not String.IsNullOrWhiteSpace(ModuleJson(&quot;ProcessName&quot;).ToString) And &#xA;Not String.IsNullOrWhiteSpace(ModuleJson(&quot;TaskName&quot;).ToString) And &#xA;Not String.IsNullOrWhiteSpace(ModuleJson(&quot;E5HookCredentialAsset&quot;).ToString) And &#xA;Not String.IsNullOrWhiteSpace(ModuleJson(&quot;E5HookURL&quot;).ToString) And &#xA;(Not String.IsNullOrWhiteSpace(ModuleJson(&quot;IsScratchpadUpdate&quot;).ToString) AndAlso (ModuleJson(&quot;IsScratchpadUpdate&quot;).ToString.ToLower.Trim.Equals(&quot;true&quot;) Or ModuleJson(&quot;IsScratchpadUpdate&quot;).ToString.ToLower.Trim.Equals(&quot;false&quot;))) And &#xA;Not String.IsNullOrWhiteSpace(ModuleJson(&quot;ProcessReference&quot;).ToString) And&#xA;(Not String.IsNullOrWhiteSpace(ModuleJson(&quot;ExpiryTimeDifference&quot;).ToString) AndAlso IsNumeric(ModuleJson(&quot;ExpiryTimeDifference&quot;).ToString)) And &#xA;(Not String.IsNullOrWhiteSpace(ModuleJson(&quot;NumberOfRetries&quot;).ToString) AndAlso IsNumeric(ModuleJson(&quot;NumberOfRetries&quot;).ToString))]" DisplayName="If-Validate Input param" sap:VirtualizedContainerService.HintSize="681.6,1116" sap2010:WorkflowViewState.IdRef="If_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Initialize Input parameters" sap:VirtualizedContainerService.HintSize="304,952.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign-ProcessName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ProcessName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ModuleJson("ProcessName").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-TaskName" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TaskName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ModuleJson("TaskName").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-E5HookCredentialAsset" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[E5HookCredentialAsset]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ModuleJson("E5HookCredentialAsset").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-E5HookURL" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[E5HookURL]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ModuleJson("E5HookURL").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-IsScratchpadUpdate" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[IsScratchpadUpdate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[Boolean.Parse(ModuleJson("IsScratchpadUpdate").ToString)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign- Send Task Complete Notifiaction" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[NotifyTaskRunCompletion]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[If(ModuleJson.ContainsKey("NotifyTaskRunCompletion"),Boolean.Parse(ModuleJson("NotifyTaskRunCompletion").ToString),false)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-ProcessRefference" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ProcessReference]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ModuleJson("ProcessReference").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-ExpiryTimeDifference" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[ExpiryTimeDifference]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[convert.ToInt32(ModuleJson("ExpiryTimeDifference").ToString)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-NumberOfRetries" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[NoOfRetries]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[convert.ToInt32(ModuleJson("NumberOfRetries").ToString)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Throw Business Exception workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Utils\Exception\Throw Business Exception.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="MessageCode">INVALID_INPUT_PARAMS</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ExtraMessage">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Else>
            </If>
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Initialize Hook by getting credentials from Asset and perform login(calling Store Hook)." DisplayName="Initialize E5 Hooks" sap:VirtualizedContainerService.HintSize="4980.8,576.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:GenericValue" Name="TaskRunJson" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,312" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[E5HookCredentialAsset]" DisplayName="Get Hook Credential Credential" sap:VirtualizedContainerService.HintSize="283.2,80.8" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[HookPassword]" Username="[HookUserName]" />
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Exception Handler" sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Store Hook Config workflow" sap:VirtualizedContainerService.HintSize="436.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Store Hook Config.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="URL">[E5HookURL]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="UserName">[HookUserName]</InArgument>
                <InArgument x:TypeArguments="ss:SecureString" x:Key="Password">[HookPassword]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="ClientName">[ClientName]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Initialize values - Expiry time, Current time.&#xA;Note: All in universal time." DisplayName="Initialize values" sap:VirtualizedContainerService.HintSize="4980.8,128.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign-Expiry Time" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ExpiryTime]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Now.ToUniversalTime.AddMinutes(ExpiryTimeDifference).ToString(DateFormatSchema).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign-Current Time" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[CurrentTime]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Now.ToUniversalTime.ToString(DateFormatSchema).ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="From scratchpad get the particular item based on ProcessName and TaskName. It contains TaskRunID &amp; ExpiryTime." DisplayName="Find Scracthpad Item" sap:VirtualizedContainerService.HintSize="4980.8,160.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Filter json" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[FilterJObj]" JsonString="[&quot;{'ProcessName':'&quot;+ProcessName+&quot;','TaskName':'&quot;+TaskName+&quot;'}&quot;]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Find workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Find.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                <OutArgument x:TypeArguments="njl:JObject" x:Key="Result">[FindResult]</OutArgument>
                <InArgument x:TypeArguments="njl:JObject" x:Key="Filter">[FilterJObj]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
          <If sap2010:Annotation.AnnotationText="If scratchpad contains item for particualr ProcessName &amp; TaskName." Condition="[FindResult(&quot;count&quot;).ToString.Equals(&quot;0&quot;)]" DisplayName="If-Record Exists" sap:VirtualizedContainerService.HintSize="4980.8,6032" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap2010:Annotation.AnnotationText="1. If scratchpad has no item for particualr ProcessName &amp; TaskName.&#xA;2. Create a new Item in scratchpad with ProcessName &amp; TaskName, then update the CurrentExpiry time and taskrun ID(by create a new taskrun in SPA)." sap:VirtualizedContainerService.HintSize="419.2,745.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="377.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;No item in Scratchpad for process:&quot;+ProcessName]" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Set Generic Value workflow" sap:VirtualizedContainerService.HintSize="377.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Utils\Store\Set Generic Value.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="Key">TaskRun.JSON</InArgument>
                    <InArgument x:TypeArguments="ui:GenericValue" x:Key="Value">[Nothing]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Begin Task Execution workflow" sap:VirtualizedContainerService.HintSize="377.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Begin Task Execution.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="TaskName">[TaskName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="HookURL">[E5HookURL]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="HookUserName">[HookUserName]</InArgument>
                    <InArgument x:TypeArguments="ss:SecureString" x:Key="HookPassword">[HookPassword]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="TaskRunIdentifier">[TaskRunID]</OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="ClientName">[ClientName]</OutArgument>
                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="SummaryFieldNames">[SummaryFieldNames]</OutArgument>
                    <OutArgument x:TypeArguments="njl:JObject" x:Key="FlowConfig">[FlowConfig]</OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="ProcessIdentifier">[ProcessIdentifier]</OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="DeepLink">[DeepLink]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Insert scratchpad" sap:VirtualizedContainerService.HintSize="377.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[InsertJObj]" JsonString="[&quot;{'ProcessName': '&quot;+ProcessName+&quot;',       'TaskName': '&quot;+TaskName+&quot;',    'ExpiryTime': '&quot;+ExpiryTime+&quot;',    'TaskRunID': '&quot;+TaskRunID+&quot;', 'DeepLink':'&quot;+DeepLink+&quot;','SummaryFieldNames':'&quot;+String.Join(&quot;,&quot;,SummaryFieldNames)+&quot;'}&quot;]" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Insert workflow" sap:VirtualizedContainerService.HintSize="377.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Insert.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                    <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[InsertJObj]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:Annotation.AnnotationText="Scratchpad has record to extract." sap:VirtualizedContainerService.HintSize="4517.6,5841.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="4476,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Record found (count&quot;+FindResult(&quot;count&quot;).ToString+&quot;) in Scratchpad for process:&quot;+ProcessName+&quot;, Task run ID:&quot;+TaskRunID+&quot; &amp; Scratchpad Expiry time:&quot;+ExpiryTime]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Assign DisplayName="Assign-TaskRunID" sap:VirtualizedContainerService.HintSize="4476,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[TaskRunID]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[FindResult("match")(0)("_source")("TaskRunID").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign-ScratchpadExpiryTime" sap:VirtualizedContainerService.HintSize="4476,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ScratchpadExpiryTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[FindResult("match")(0)("_source")("ExpiryTime").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign-DeepLink" sap:VirtualizedContainerService.HintSize="4476,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[DeepLink]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[FindResult("match")(0)("_source")("DeepLink").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign-DeepLink" sap:VirtualizedContainerService.HintSize="4476,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(x:String)">[SummaryFieldNames]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(x:String)">[FindResult("match")(0)("_source")("SummaryFieldNames").ToString.Split(","c).ToList]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign-ScratchpadRecordID" sap:VirtualizedContainerService.HintSize="4476,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ScratchpadRecordID]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[FindResult("match")(0)("_id").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[ScratchpadExpiryTime=&quot;&quot;]" DisplayName="If-Scratchpad ID is null" sap:VirtualizedContainerService.HintSize="4476,5124.8" sap2010:WorkflowViewState.IdRef="If_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="1674.4,3416.8" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1632.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Expiry time is empty&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <Sequence sap2010:Annotation.AnnotationText="Empty the task run ID in scratchpad." DisplayName="Empty Task run ID" sap:VirtualizedContainerService.HintSize="1632.8,444.8" sap2010:WorkflowViewState.IdRef="Sequence_34">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Going to update Task run ID as empty in scratchpad&quot;]" />
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_8" JsonObject="[UpdateJObj]" JsonString="{}{'TaskRunID': ''}" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                            <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                      <If Condition="[TaskRunID&lt;&gt;&quot;&quot;]" DisplayName="If-Task run empty" sap:VirtualizedContainerService.HintSize="1632.8,1359.2" sap2010:WorkflowViewState.IdRef="If_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap2010:Annotation.AnnotationText="When a task run is completed, we need to send success notification. So we are updating the task run as completed and sending success notification to the client." DisplayName="Completing Task Run and Sending Success mail to the Client" sap:VirtualizedContainerService.HintSize="897.6,1200" sap2010:WorkflowViewState.IdRef="Sequence_52">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update current task run as completed in SPA." DisplayName="Invoke Update Task Execution workflow" sap:VirtualizedContainerService.HintSize="856,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Optimization\Update Task Execution.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="SummaryResultObject">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="FailureReason">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TaskResult">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TaskResultSummary">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TaskRunStatus">Completed</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                <InArgument x:TypeArguments="ui:GenericValue" x:Key="TaskRunID">[TaskRunID]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TaskId" />
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <If Condition="[NotifyTaskRunCompletion]" DisplayName="Sending Completion Notification if the key is True" sap:VirtualizedContainerService.HintSize="856,916.8" sap2010:WorkflowViewState.IdRef="If_22">
                              <If.Then>
                                <TryCatch sap2010:Annotation.AnnotationText="Trying to send notification using Send Gmail. If it got faulted, it means the Notification Gmail not get initialised. So Skip that with error log" DisplayName="Sending Notifcation for Task run Completion" sap:VirtualizedContainerService.HintSize="433.6,757.6" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Sending Notifcation for Task run Completion" sap:VirtualizedContainerService.HintSize="393.6,584" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="352,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Trace" Message="[&quot;Send Task run completion notification: True. Sending task run completion notification&quot;]" />
                                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="352,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[EmailSubject]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[ClientName +" | "+ProcessName+" status"]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[EmailBody]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[String.Format("&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Hi,&lt;p&gt;&lt;p&gt;The {0} | {1} process has &lt;b&gt;{2}&lt;/b&gt; execution.&lt;/p&gt;&lt;p&gt;Please login to &lt;a href=""{3}""&gt;&lt;b&gt;Element5 Automation Hub&lt;b&gt;&lt;/a&gt; to view the detailed report.&lt;/p&gt;&lt;p&gt;Thank you!&lt;/p&gt;&lt;p style='color:gray;'&gt;(This is an automated message. Please do not reply)&lt;p&gt;&lt;/body&gt;&lt;/html&gt;", ClientName, ProcessName,"Completed", DeepLink)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:MultipleAssign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="352,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="Utils\Notifications Channel\Gmail\Send Gmail.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="MailName">NotificationEmail</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="MailSubject">[EmailSubject]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="MailBody">[EmailBody]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="Attachments" />
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign sap:VirtualizedContainerService.HintSize="352,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[IsNotificationSent]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,548.8" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:Annotation.AnnotationText="Error occured while sending completion mail&#xD;&#xA;It may caused due to any technical error or the Email may not be initialized in the Process. " DisplayName="Error at Sending Email" sap:VirtualizedContainerService.HintSize="375.2,478.4" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Error" Message="[&quot;Error Sending Completion mail: &quot; + exception.ToString]" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Error" Message="[&quot;Task Run Completion mail not sent successfully. Please send it manually&quot;]" />
                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[IsNotificationSent]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Trace" Message="[&quot;Send Task run completion notification: False. No need to send task run completion notification&quot;]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">[IsNotificationSent]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="[&quot;Task run ID also empty so no need to update task run.&quot;]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                        </If.Else>
                      </If>
                      <If Condition="[IsCreateNewTask]" DisplayName="If-create new task run" sap:VirtualizedContainerService.HintSize="1632.8,1307.2" sap2010:WorkflowViewState.IdRef="If_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="794.4,1148" sap2010:WorkflowViewState.IdRef="Sequence_40">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="752.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="[&quot;Need to create new task run.&quot;]" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Set Generic Value workflow" sap:VirtualizedContainerService.HintSize="752.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Utils\Store\Set Generic Value.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="Key">TaskRun.JSON</InArgument>
                                <InArgument x:TypeArguments="ui:GenericValue" x:Key="Value">[Nothing]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Begin new task in SPA." DisplayName="Invoke Begin Task Execution workflow" sap:VirtualizedContainerService.HintSize="752.8,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Begin Task Execution.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="TaskName">[TaskName]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="HookURL">[E5HookURL]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="HookUserName">[HookUserName]</InArgument>
                                <InArgument x:TypeArguments="ss:SecureString" x:Key="HookPassword">[HookPassword]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="TaskRunIdentifier">[TaskRunID]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="ClientName">[ClientName]</OutArgument>
                                <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="SummaryFieldNames">[SummaryFieldNames]</OutArgument>
                                <OutArgument x:TypeArguments="njl:JObject" x:Key="FlowConfig">[FlowConfig]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="ProcessIdentifier">[ProcessIdentifier]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="DeepLink">[DeepLink]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <If sap2010:Annotation.AnnotationText="If need to update new task run ID in scratchpad." Condition="[IsScratchpadUpdate]" DisplayName="If-Update run ID in scratchpad" sap:VirtualizedContainerService.HintSize="752.8,635.2" sap2010:WorkflowViewState.IdRef="If_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,444.8" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Going to update Task run ID in scratchpad&quot;]" />
                                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_9" JsonObject="[UpdateJObj]" JsonString="[&quot;{'ProcessName': '&quot;+ProcessName+&quot;',       'TaskName': '&quot;+TaskName+&quot;',    'ExpiryTime': '&quot;+ExpiryTime+&quot;',    'TaskRunID': '&quot;+TaskRunID+&quot;', 'DeepLink':'&quot;+DeepLink+&quot;','SummaryFieldNames':'&quot;+String.Join(&quot;,&quot;,SummaryFieldNames)+&quot;'}&quot;]" />
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update newly created spa task run ID in scratchpad." DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="333.6,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                      <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;No need to update Task run ID in scratchpad&quot;]" />
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="794.4,860.8" sap2010:WorkflowViewState.IdRef="Sequence_50">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="752.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info" Message="[&quot;Noneed to create new task run.&quot;]" />
                            <If sap2010:Annotation.AnnotationText="If need to update new task run ID in scratchpad." Condition="[IsScratchpadUpdate]" DisplayName="If-Update run ID in scratchpad" sap:VirtualizedContainerService.HintSize="752.8,635.2" sap2010:WorkflowViewState.IdRef="If_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,444.8" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Going to update Task run ID in scratchpad&quot;]" />
                                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_11" JsonObject="[UpdateJObj]" JsonString="{}{'TaskRunID': '', 'ExpiryTime':''}" />
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update newly created spa task run ID in scratchpad." DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="333.6,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                      <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;No need to update Task run ID in scratchpad&quot;]" />
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="2757.6,4965.6" sap2010:WorkflowViewState.IdRef="Sequence_37">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="2716,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Expiry time exists: &quot;+(Convert.ToDateTime(FindResult(&quot;match&quot;)(0)(&quot;_source&quot;)(&quot;ExpiryTime&quot;)).ToString+&quot;&gt;&quot;+Convert.ToDateTime(CurrentTime).ToString)]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <If Condition="[TaskRunID=&quot;&quot;]" DisplayName="If-Task run ID empty" sap:VirtualizedContainerService.HintSize="2716,4740" sap2010:WorkflowViewState.IdRef="If_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="536.8,1556.8" sap2010:WorkflowViewState.IdRef="Sequence_47">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="495.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Task Run ID alone empty&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <TryCatch sap2010:Annotation.AnnotationText="Retry until get the new taskrun ID in scratchpad." DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="495.2,1331.2" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <ui:RetryScope DisplayName="Retry Scope-Retry until get Task run ID" sap:VirtualizedContainerService.HintSize="458.4,1068.8" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="[NoOfRetries]" RetryInterval="00:00:01">
                                  <ui:RetryScope.ActivityBody>
                                    <ActivityAction>
                                      <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="416.8,817.6" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="Find Scracthpad Item" sap:VirtualizedContainerService.HintSize="375.2,724.8" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Filter json" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_7" JsonObject="[FilterJObj]" JsonString="[&quot;{'ProcessName':'&quot;+ProcessName+&quot;','TaskName':'&quot;+TaskName+&quot;'}&quot;]" />
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Find task run ID in scratchpad based on process name and task name." DisplayName="Invoke Find workflow" sap:VirtualizedContainerService.HintSize="333.6,132" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Find.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                              <OutArgument x:TypeArguments="njl:JObject" x:Key="Result">[FindResult]</OutArgument>
                                              <InArgument x:TypeArguments="njl:JObject" x:Key="Filter">[FilterJObj]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <Assign DisplayName="Assign-TaskRunID" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[TaskRunID]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[FindResult("match")(0)("_source")("TaskRunID").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign-ExpiryTime" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ExpiryTime]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[FindResult("match")(0)("_source")("ExpiryTime").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign-SummaryFieldNames" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:List(x:String)">[SummaryFieldNames]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:List(x:String)">[FindResult("match")(0)("_source")("SummaryFieldNames").ToString.Split(","c).ToList]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign-ScratchpadRecordID" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ScratchpadRecordID]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[FindResult("match")(0)("_id").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:RetryScope.ActivityBody>
                                  <ui:RetryScope.Condition>
                                    <ActivityFunc x:TypeArguments="x:Boolean">
                                      <ui:IsMatch sap2010:Annotation.AnnotationText="If taskrun ID length not equals with 0" BuilderPattern="[^0]+" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="333.6,91.2" sap2010:WorkflowViewState.IdRef="IsMatch_2" Input="[TaskRunID.Length.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;[^0]+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[^0]+" RegexOption="IgnoreCase">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:IsMatch>
                                    </ActivityFunc>
                                  </ui:RetryScope.Condition>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:RetryScope>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="461.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Exception_block" sap:VirtualizedContainerService.HintSize="376,700.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log Exception workflow" sap:VirtualizedContainerService.HintSize="334.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Utils\Exception\Log Exception.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionObject">[exception]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="334.4,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_10" JsonObject="[UpdateJObj]" JsonString="{}{'ExpiryTime': '',    'TaskRunID': ''}" />
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update newly created spa task run ID in scratchpad." DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="334.4,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                          <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Updated task run ID &amp; expiry time as null&quot;]">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:LogMessage>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Throw Business Exception workflow" sap:VirtualizedContainerService.HintSize="334.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Utils\Exception\Throw Business Exception.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="MessageCode">ERROR_WHILE_RETRY_GET_TASK_RUN_ID</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="ExtraMessage">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="2135.2,4580.8" sap2010:WorkflowViewState.IdRef="Sequence_48">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="2093.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[&quot;Task Run ID and Expiry time not  empty&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <If sap2010:Annotation.AnnotationText="If current time fall under scratchpad expiry time." Condition="[(Convert.ToDateTime(FindResult(&quot;match&quot;)(0)(&quot;_source&quot;)(&quot;ExpiryTime&quot;))&gt;Convert.ToDateTime(CurrentTime))]" DisplayName="If-Expiry &gt; Current time" sap:VirtualizedContainerService.HintSize="2093.6,4355.2" sap2010:WorkflowViewState.IdRef="If_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="375.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Scratchpad Expiry time not expired&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <Assign DisplayName="Assign-ExpiryTime" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ExpiryTime]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ScratchpadExpiryTime]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="1674.4,4164.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1632.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Scratchpad Expiry time expired&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <Sequence sap2010:Annotation.AnnotationText="Empty the task run ID in scratchpad." DisplayName="Empty Task run ID" sap:VirtualizedContainerService.HintSize="1632.8,444.8" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Going to update Task run ID as empty in scratchpad&quot;]" />
                                    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_12" JsonObject="[UpdateJObj]" JsonString="{}{'TaskRunID': ''}" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                        <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                  <Sequence sap2010:Annotation.AnnotationText="When a task run is completed, we need to send success notification. So we are updating the task run as completed and sending success notification to the client." DisplayName="Completing Task Run and Sending Success mail to the Client" sap:VirtualizedContainerService.HintSize="1632.8,1200" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update current task run as completed in SPA." DisplayName="Invoke Update Task Execution workflow" sap:VirtualizedContainerService.HintSize="852.8,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Optimization\Update Task Execution.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="SummaryResultObject">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="FailureReason">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TaskResult">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TaskResultSummary">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TaskRunStatus">Completed</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                        <InArgument x:TypeArguments="ui:GenericValue" x:Key="TaskRunID">[TaskRunID]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="TaskId" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <If Condition="[NotifyTaskRunCompletion]" DisplayName="Sending Completion Notification if the key is True" sap:VirtualizedContainerService.HintSize="852.8,916.8" sap2010:WorkflowViewState.IdRef="If_25">
                                      <If.Then>
                                        <TryCatch sap2010:Annotation.AnnotationText="Trying to send notification using Send Gmail. If it got faulted, it means the Notification Gmail not get initialised. So Skip that with error log" DisplayName="Sending Notifcation for Task run Completion" sap:VirtualizedContainerService.HintSize="433.6,757.6" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch.Try>
                                            <Sequence DisplayName="Sending Notifcation for Task run Completion" sap:VirtualizedContainerService.HintSize="393.6,584" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="352,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Trace" Message="[&quot;Send Task run completion notification: True. Sending task run completion notification&quot;]" />
                                              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="352,130.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                                                <ui:MultipleAssign.AssignOperations>
                                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:String">[EmailSubject]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:String">[ClientName +" | "+ProcessName+" status"]</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:String">[EmailBody]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:String">[String.Format("&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Hi,&lt;p&gt;&lt;p&gt;The {0} | {1} process has &lt;b&gt;{2}&lt;/b&gt; execution.&lt;/p&gt;&lt;p&gt;Please login to &lt;a href=""{3}""&gt;&lt;b&gt;Element5 Automation Hub&lt;b&gt;&lt;/a&gt; to view the detailed report.&lt;/p&gt;&lt;p&gt;Thank you!&lt;/p&gt;&lt;p style='color:gray;'&gt;(This is an automated message. Please do not reply)&lt;p&gt;&lt;/body&gt;&lt;/html&gt;", ClientName, ProcessName,"Completed", DeepLink)]</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                  </scg:List>
                                                </ui:MultipleAssign.AssignOperations>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:MultipleAssign>
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="352,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="Utils\Notifications Channel\Gmail\Send Gmail.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="MailName">NotificationEmail</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="MailSubject">[EmailSubject]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="MailBody">[EmailBody]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                                  <InArgument x:TypeArguments="s:String[]" x:Key="Attachments" />
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <Assign sap:VirtualizedContainerService.HintSize="352,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[IsNotificationSent]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,548.8" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Sequence sap2010:Annotation.AnnotationText="Error occured while sending completion mail&#xA;It may caused due to any technical error or the Email may not be initialized in the Process. " DisplayName="Error at Sending Email" sap:VirtualizedContainerService.HintSize="375.2,478.4" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Error" Message="[&quot;Error Sending Completion mail: &quot; + exception.ToString]" />
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Error" Message="[&quot;Task Run Completion mail not sent successfully. Please send it manually&quot;]" />
                                                  <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[IsNotificationSent]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,285.6" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Trace" Message="[&quot;Send Task run completion notification: False. No need to send task run completion notification&quot;]" />
                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[IsNotificationSent]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                  <If Condition="[IsCreateNewTask]" DisplayName="If-Create new task run" sap:VirtualizedContainerService.HintSize="1632.8,1307.2" sap2010:WorkflowViewState.IdRef="If_20">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="794.4,1148" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="752.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;Need to create new task run.&quot;]" />
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Set Generic Value workflow" sap:VirtualizedContainerService.HintSize="752.8,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Utils\Store\Set Generic Value.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="Key">TaskRun.JSON</InArgument>
                                            <InArgument x:TypeArguments="ui:GenericValue" x:Key="Value">[Nothing]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Begin new task in SPA." DisplayName="Invoke Begin Task Execution workflow" sap:VirtualizedContainerService.HintSize="752.8,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Begin Task Execution.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="TaskName">[TaskName]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="HookURL">[E5HookURL]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="HookUserName">[HookUserName]</InArgument>
                                            <InArgument x:TypeArguments="ss:SecureString" x:Key="HookPassword">[HookPassword]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="TaskRunIdentifier">[TaskRunID]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="ClientName">[ClientName]</OutArgument>
                                            <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="SummaryFieldNames">[SummaryFieldNames]</OutArgument>
                                            <OutArgument x:TypeArguments="njl:JObject" x:Key="FlowConfig">[FlowConfig]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="ProcessIdentifier">[ProcessIdentifier]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="DeepLink">[DeepLink]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeWorkflowFile>
                                        <If sap2010:Annotation.AnnotationText="If need to update new task run ID in scratchpad." Condition="[IsScratchpadUpdate]" DisplayName="If-Update run ID in scratchpad" sap:VirtualizedContainerService.HintSize="752.8,635.2" sap2010:WorkflowViewState.IdRef="If_18">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,444.8" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;Going to update Task run ID in scratchpad&quot;]" />
                                              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_13" JsonObject="[UpdateJObj]" JsonString="[&quot;{'ProcessName': '&quot;+ProcessName+&quot;',       'TaskName': '&quot;+TaskName+&quot;',    'ExpiryTime': '&quot;+ExpiryTime+&quot;',    'TaskRunID': '&quot;+TaskRunID+&quot;', 'DeepLink':'&quot;+DeepLink+&quot;','SummaryFieldNames':'&quot;+String.Join(&quot;,&quot;,SummaryFieldNames)+&quot;'}&quot;]" />
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update newly created spa task run ID in scratchpad." DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="333.6,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                                  <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:InvokeWorkflowFile>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[&quot;No need to update Task run ID in scratchpad&quot;]" />
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="794.4,860.8" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="752.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[&quot;No need to create new task run.&quot;]" />
                                        <If sap2010:Annotation.AnnotationText="If need to update new task run ID in scratchpad." Condition="[IsScratchpadUpdate]" DisplayName="If-Update run ID in scratchpad" sap:VirtualizedContainerService.HintSize="752.8,635.2" sap2010:WorkflowViewState.IdRef="If_19">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,444.8" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_14" JsonObject="[UpdateJObj]" JsonString="{}{'TaskRunID': '', 'ExpiryTime':''}" />
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update newly created spa task run ID in scratchpad." DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="333.6,119.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                                  <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:InvokeWorkflowFile>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Updated Task run ID and expiry time as null in scratchpad&quot;]" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;No need to update Task run ID in scratchpad&quot;]" />
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1632.8,867.2" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="283.2,788.8" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap:VirtualizedContainerService.HintSize="241.6,696" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Task run ID and Expiry time is empty&quot;]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                          <Sequence sap2010:Annotation.AnnotationText="Empty the task run ID in scratchpad." DisplayName="Empty Task run ID" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Going to update Task run ID as empty in scratchpad&quot;]" />
                                            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[UpdateJObj]" JsonString="{}{'TaskRunID': ''}" />
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                                <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update current task run as completed in SPA." DisplayName="Invoke Update Task Execution workflow" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Optimization\Update Task Execution.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="SummaryResultObject">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="FailureReason">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="TaskResult">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="TaskResultSummary">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="TaskRunStatus">Completed</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                              <InArgument x:TypeArguments="ui:GenericValue" x:Key="TaskRunID">[TaskRunID]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Begin new task in SPA." DisplayName="Invoke Begin Task Execution workflow" sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Utils\Hooks\Execution Hooks\Begin Task Execution.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="TaskName">[TaskName]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[ProcessName]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="HookURL">[E5HookURL]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="HookUserName">[HookUserName]</InArgument>
                                              <InArgument x:TypeArguments="ss:SecureString" x:Key="HookPassword">[HookPassword]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="TaskRunIdentifier">[TaskRunID]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="ClientName">[ClientName]</OutArgument>
                                              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="SummaryFieldNames">[SummaryFieldNames]</OutArgument>
                                              <OutArgument x:TypeArguments="njl:JObject" x:Key="FlowConfig">[FlowConfig]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="ProcessIdentifier">[ProcessIdentifier]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="DeepLink">[DeepLink]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <If sap2010:Annotation.AnnotationText="If need to update new task run ID in scratchpad." Condition="[IsScratchpadUpdate]" DisplayName="If-Update run ID in scratchpad" sap:VirtualizedContainerService.HintSize="200,96.8" sap2010:WorkflowViewState.IdRef="If_10">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,441" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Going to update Task run ID in scratchpad&quot;]" />
                                                <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON-Update scratchpad" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[UpdateJObj]" JsonString="[&quot;{'ProcessName': '&quot;+ProcessName+&quot;',       'TaskName': '&quot;+TaskName+&quot;',    'ExpiryTime': '&quot;+ExpiryTime+&quot;',    'TaskRunID': '&quot;+TaskRunID+&quot;', 'DeepLink':'&quot;+DeepLink+&quot;','SummaryFieldNames':'&quot;+String.Join(&quot;,&quot;,SummaryFieldNames)+&quot;'}&quot;]" />
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Update newly created spa task run ID in scratchpad." DisplayName="Invoke Update workflow" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Utils\Scratch Pad\Update.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="ProcessReference">[ProcessReference]</InArgument>
                                                    <InArgument x:TypeArguments="njl:JObject" x:Key="Data">[UpdateJObj]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="ID">[ScratchpadRecordID]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;No need to update Task run ID in scratchpad&quot;]" />
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="4980.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Task Run ID:&quot;+TaskRunID+&quot; &amp; ExpiryTime:&quot;+ExpiryTime]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="5025.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Exception_block" sap:VirtualizedContainerService.HintSize="376,308" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log Exception workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Utils\Exception\Log Exception.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionObject">[exception]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Throw Business Exception workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Utils\Exception\Throw Business Exception.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="MessageCode">ERROR_WHILE_GET_TASK_RUN_ID</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ExtraMessage">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="5025.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Exception_block" sap:VirtualizedContainerService.HintSize="376,243" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Log Exception workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Utils\Exception\Log Exception.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:Exception" x:Key="ExceptionObject">[exception]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="__Prefix">[IO.Directory.GetCurrentDirectory]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="2288,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Get task run ID process completed.&quot;]" />
  </Sequence>
</Activity>